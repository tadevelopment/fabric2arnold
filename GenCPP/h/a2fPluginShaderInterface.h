#ifndef __KL2EDK_AUTOGEN_a2fPluginShaderInterface__
#define __KL2EDK_AUTOGEN_a2fPluginShaderInterface__

#ifdef KL2EDK_INCLUDE_MESSAGES
  #pragma message ( "Including 'a2fPluginShaderInterface.h'" )
#endif

////////////////////////////////////////////////////////////////
// THIS FILE IS AUTOMATICALLY GENERATED -- DO NOT MODIFY!!
////////////////////////////////////////////////////////////////
// Generated by kl2edk version 1.15.3
////////////////////////////////////////////////////////////////

#include <FabricEDK.h>
#if FABRIC_EDK_VERSION_MAJ != 1 || FABRIC_EDK_VERSION_MIN != 15
# error "This file needs to be rebuilt for the current EDK version!"
#endif

#include "global.h"
#include "AtList.h"
#include "AtMetaDataStore.h"
#include "AtNode.h"
#include "AtParamValue.h"
#include "AtShaderGlobals.h"

namespace Fabric { namespace EDK { namespace KL {

// KL interface 'a2fPluginShaderInterface'

class a2fPluginShaderInterface
{
public:
  
  struct VTable
  {
    void (*parameters_190DD5E40486B4F00CBDA955117A6BF9)(
      ObjectCore const * const *objectCorePtr,
      Traits< AtList >::INParam list,
      Traits< AtMetaDataStore >::INParam metadata
      );
    void (*initialize_768E677B52B652FE39CFA9576E6EF96E)(
      ObjectCore const * const *objectCorePtr,
      Traits< AtNode >::INParam node,
      Traits< AtParamValue >::INParam value
      );
    void (*update_B4D5A255F30F6D51C3292E530E9BC8C5)(
      ObjectCore const * const *objectCorePtr,
      Traits< AtNode >::INParam node,
      Traits< AtParamValue >::INParam value
      );
    void (*finish_530482127119E2FE8EE7D5C046A63A8E)(
      ObjectCore const * const *objectCorePtr,
      Traits< AtNode >::INParam node
      );
    void (*evaluate_21255CEE1AF4E92C9AB84F73EAFAB2FB)(
      ObjectCore const * const *objectCorePtr,
      Traits< AtNode >::INParam node,
      Traits< AtShaderGlobals >::INParam globals
      );
  };
  
  struct Bits
  {
    ObjectCore *objectCorePtr;
    SwapPtr<VTable const> const *vTableSwapPtrPtr;
  } *m_bits;
  
protected:
  
  friend struct Traits< a2fPluginShaderInterface >;
  
  static void ConstructEmpty( a2fPluginShaderInterface *self )
  {
    self->m_bits = 0;
  }
  
  static void ConstructCopy( a2fPluginShaderInterface *self, a2fPluginShaderInterface const *other )
  {
    if ( (self->m_bits = other->m_bits) )
      AtomicUInt32Increment( &self->m_bits->objectCorePtr->refCount );
  }
  
  static void AssignCopy( a2fPluginShaderInterface *self, a2fPluginShaderInterface const *other )
  {
    if ( self->m_bits != other->m_bits )
    {
      Destruct( self );
      ConstructCopy( self, other );
    }
  }
  
  static void Destruct( a2fPluginShaderInterface *self )
  {
    if ( self->m_bits
      && AtomicUInt32DecrementAndGetValue( &self->m_bits->objectCorePtr->refCount ) == 0 )
    {
      self->m_bits->objectCorePtr->lTableSwapPtrPtr->get()->lifecycleDestroy(
        &self->m_bits->objectCorePtr
        );
    }
  }
  
public: 
  
  typedef a2fPluginShaderInterface &Result;
  typedef a2fPluginShaderInterface const &INParam;
  typedef a2fPluginShaderInterface &IOParam;
  
  a2fPluginShaderInterface()
  {
    ConstructEmpty( this );
  }
  
  a2fPluginShaderInterface( a2fPluginShaderInterface const &that )
  {
    ConstructCopy( this, &that );
  }
  
  a2fPluginShaderInterface &operator =( a2fPluginShaderInterface const &that )
  {
    AssignCopy( this, &that );
    return *this;
  }
  
  ~a2fPluginShaderInterface()
  {
    Destruct( this );
  }
  
  void appendDesc( String::IOParam string ) const
  {
    if ( m_bits )
      m_bits->objectCorePtr->lTableSwapPtrPtr->get()->appendDesc( &m_bits->objectCorePtr, string );
    else string.append( "null", 4 );
  }
  
  bool isValid() const
  {
    return !!m_bits;
  }
  
  operator bool() const
  {
    return isValid();
  }
  
  bool operator !() const
  {
    return !isValid();
  }
  
  bool operator ==( INParam that )
  {
    return m_bits == that.m_bits;
  }
  
  bool operator !=( INParam that )
  {
    return m_bits != that.m_bits;
  }
  
  
  void parameters(
    Traits< AtList >::INParam list,
    Traits< AtMetaDataStore >::INParam metadata
    ) const
  {
    m_bits->vTableSwapPtrPtr->get()->parameters_190DD5E40486B4F00CBDA955117A6BF9(
      &m_bits->objectCorePtr,
      list,
      metadata
      );
  }
  
  void initialize(
    Traits< AtNode >::INParam node,
    Traits< AtParamValue >::INParam value
    ) const
  {
    m_bits->vTableSwapPtrPtr->get()->initialize_768E677B52B652FE39CFA9576E6EF96E(
      &m_bits->objectCorePtr,
      node,
      value
      );
  }
  
  void update(
    Traits< AtNode >::INParam node,
    Traits< AtParamValue >::INParam value
    ) const
  {
    m_bits->vTableSwapPtrPtr->get()->update_B4D5A255F30F6D51C3292E530E9BC8C5(
      &m_bits->objectCorePtr,
      node,
      value
      );
  }
  
  void finish(
    Traits< AtNode >::INParam node
    ) const
  {
    m_bits->vTableSwapPtrPtr->get()->finish_530482127119E2FE8EE7D5C046A63A8E(
      &m_bits->objectCorePtr,
      node
      );
  }
  
  void evaluate(
    Traits< AtNode >::INParam node,
    Traits< AtShaderGlobals >::INParam globals
    ) const
  {
    m_bits->vTableSwapPtrPtr->get()->evaluate_21255CEE1AF4E92C9AB84F73EAFAB2FB(
      &m_bits->objectCorePtr,
      node,
      globals
      );
  }
};

inline void Traits<a2fPluginShaderInterface>::ConstructEmpty( a2fPluginShaderInterface &val )
{
  a2fPluginShaderInterface::ConstructEmpty( &val );
}
inline void Traits<a2fPluginShaderInterface>::ConstructCopy( a2fPluginShaderInterface &lhs, a2fPluginShaderInterface const &rhs )
{
  a2fPluginShaderInterface::ConstructCopy( &lhs, &rhs );
}
inline void Traits<a2fPluginShaderInterface>::AssignCopy( a2fPluginShaderInterface &lhs, a2fPluginShaderInterface const &rhs )
{
  a2fPluginShaderInterface::AssignCopy( &lhs, &rhs );
}
inline void Traits<a2fPluginShaderInterface>::Destruct( a2fPluginShaderInterface &val )
{
  a2fPluginShaderInterface::Destruct( &val );
}

}}}

#endif // __KL2EDK_AUTOGEN_a2fPluginShaderInterface__
