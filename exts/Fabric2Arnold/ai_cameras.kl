/**
    API for writing camera nodes 
  
*/

require Math;

//////////////////////////////////////////////////
//  enumerated values
//////////////////////////////////////////////////
//  overrides 
//////////////////////////////////////////////////
//  classes 
/**  Camera ray creation inputs 
 */
struct AtCameraInput {
  Float32 sx;
  Float32 sy; //  screen-space coordinates - within the screen window 
 
  Float32 dsx;
  Float32 dsy; //  derivatives of the screen-space coordinates with respect to pixel coordinates 
 
  Float32 lensx;
  Float32 lensy; //  lens sampling coordinates in [0,1)^2 
 
  Float32 relative_time; //  time relative to this camera (in [0,1)) 
 
};

//////////////////////////////////////////
/**  Camera ray creation outputs
If the d*d* derivatives are left to their default value of zero, an accurate numerical estimate will be automatically computed for them to prevent catastrophic degradation of texture IO performance. Note that this estimate might not be as good as analytically computed derivatives but will often be good enough. 
 */
struct AtCameraOutput {
  Vec3 origin; //  ray origin in camera space (required) 
 
  Vec3 dir; //  ray direction in camera space (required) 
 
  Vec3 dOdx;
  Vec3 dOdy; //  derivative of the ray origin with respect to the pixel coordinates (optional - defaults to 0) 
 
  Vec3 dDdx;
  Vec3 dDdy; //  derivative of the ray direction with respect to the pixel coordinates (optional - defaults to 0) 
 
  Float32 weight; //  weight of this ray (used for vignetting) (optional - defaults to 1) 
 
};

//////////////////////////////////////////
//////////////////////////////////////////////////
//  global-scope functions 
/**
API Methods for Camera Writers

*/


function AiCameraInitialize(io AtNode node, io Data data) = '_fe_AiCameraInitialize';
function AiCameraUpdate(io AtNode node, Boolean plane_distance) = '_fe_AiCameraUpdate';
function AiCameraDestroy(io AtNode node) = '_fe_AiCameraDestroy';
function Data AiCameraGetLocalData(AtNode node) = '_fe_AiCameraGetLocalData';
